/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LotteryV3, LotteryV3Interface } from "../LotteryV3";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "Random",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "person",
        type: "address",
      },
    ],
    name: "WhoRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "addTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "birikenPara",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "howManyWillBePicked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "kazananlar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rastgele",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registredPeople",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendMoneyToWinners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toplamKisi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLINK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5073dd3782915140c8f3b190b5d67eac6dc5760c46e973a36085f69e2889c224210f603d836748e7dc008861005761004c61010560201b60201c565b61010d60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050507f6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f460001b60088190555067016345785d8a00006009819055506101d1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60805160601c60a05160601c611e5161021860003960008181610640015261117f0152600081816107580152818161079501528181610b1101526111430152611e516000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0a1ea85116100a2578063dbdff2c111610071578063dbdff2c114610248578063dc07820f14610266578063df15c37e14610270578063e5383f701461028e578063f2fde38b146102be5761010b565b8063b0a1ea85146101e6578063b5144c37146101f0578063badcb8e31461020c578063d87911c41461022a5761010b565b8063715018a6116100de578063715018a6146101985780638da5cb5b146101a257806394985ddd146101c0578063adc2112f146101dc5761010b565b80631aa3a0081461011057806351992fcb1461012e5780635a8488b41461014a578063680e60e71461017a575b600080fd5b6101186102da565b604051610125919061183d565b60405180910390f35b6101486004803603810190610143919061141f565b61045d565b005b610164600480360381019061015f91906114b9565b610554565b6040516101719190611762565b60405180910390f35b610182610587565b60405161018f9190611981565b60405180910390f35b6101a061058d565b005b6101aa610615565b6040516101b79190611762565b60405180910390f35b6101da60048036038101906101d59190611479565b61063e565b005b6101e46106da565b005b6101ee6108ae565b005b61020a600480360381019061020591906114b9565b610a50565b005b610214610afe565b6040516102219190611981565b60405180910390f35b610232610b04565b60405161023f9190611981565b60405180910390f35b610250610b0a565b60405161025d9190611858565b60405180910390f35b61026e610c0c565b005b610278610e6a565b604051610285919061181b565b60405180910390f35b6102a860048036038101906102a391906114b9565b610ef8565b6040516102b59190611762565b60405180910390f35b6102d860048036038101906102d3919061141f565b610f37565b005b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306101f46040518463ffffffff1660e01b815260040161033d9392919061177d565b602060405180830381600087803b15801561035757600080fd5b505af115801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f919061144c565b61039857600080fd5b3360026000600454815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460008154809291906103ff90611b20565b91905055506101f4600560008282546104189190611a02565b925050819055507fa1088d94bb1fade1192b135af11a51f29346b6b3a05bd661117ae542fd6a68593360405161044e9190611762565b60405180910390a16001905090565b61046561102f565b73ffffffffffffffffffffffffffffffffffffffff16610483610615565b73ffffffffffffffffffffffffffffffffffffffff16146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090611921565b60405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9687492a9531bc3914d553389cdcbe0e12eec84d28f59a91175ad3f563fb11be816040516105499190611762565b60405180910390a150565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b61059561102f565b73ffffffffffffffffffffffffffffffffffffffff166105b3610615565b73ffffffffffffffffffffffffffffffffffffffff1614610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090611921565b60405180910390fd5b6106136000611037565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390611941565b60405180910390fd5b6106d682826110fb565b5050565b6106e261102f565b73ffffffffffffffffffffffffffffffffffffffff16610700610615565b73ffffffffffffffffffffffffffffffffffffffff1614610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d90611921565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ec9190611762565b60206040518083038186803b15801561080457600080fd5b505afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c91906114e6565b6040518363ffffffff1660e01b81526004016108599291906117b4565b602060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab919061144c565b50565b6108b661102f565b73ffffffffffffffffffffffffffffffffffffffff166108d4610615565b73ffffffffffffffffffffffffffffffffffffffff161461092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190611921565b60405180910390fd5b6000600a5460055461093c9190611a58565b905060005b600a54811015610a4c57600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6007838154811061099d5761099c611c0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016109e69291906117b4565b602060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a38919061144c565b508080610a4490611b20565b915050610941565b5050565b600454811115610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611961565b60405180910390fd5b80600a819055508067ffffffffffffffff811115610ab657610ab5611c3b565b5b604051908082528060200260200182016040528015610ae45781602001602082028036833780820191505090505b5060079080519060200190610afa92919061130f565b5050565b60065481565b60055481565b60006009547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b689190611762565b60206040518083038186803b158015610b8057600080fd5b505afa158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb891906114e6565b1015610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090611901565b60405180910390fd5b610c0760085460095461113f565b905090565b610c1461102f565b73ffffffffffffffffffffffffffffffffffffffff16610c32610615565b73ffffffffffffffffffffffffffffffffffffffff1614610c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7f90611921565b60405180910390fd5b6000600190506000805b600115158315151415610e65576000600a548242604051602001610cb893929190611725565b60405160208183030381529060405280519060200120905060008160001c9050600060045482610ce89190611b7d565b905060006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060001515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610e3f576001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060078781548110610de857610de7611c0c565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508580610e3b90611b20565b9650505b8480610e4a90611b20565b955050600a54861415610e5c57600096505b50505050610c92565b505050565b60606007805480602002602001604051908101604052809291908181526020018280548015610eee57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ea4575b5050505050905090565b60078181548110610f0857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f3f61102f565b73ffffffffffffffffffffffffffffffffffffffff16610f5d610615565b73ffffffffffffffffffffffffffffffffffffffff1614610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611921565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a906118e1565b60405180910390fd5b61102c81611037565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806006819055507fbcf69e7223438137d9099bb71b1772c3eb2a5a8840750b247913cd6fd4d249d56006546040516111339190611981565b60405180910390a15050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016111b3929190611873565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016111e0939291906117dd565b602060405180830381600087803b1580156111fa57600080fd5b505af115801561120e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611232919061144c565b5060006112558460003060016000898152602001908152602001600020546112a0565b90506001806000868152602001908152602001600020546112769190611a02565b600160008681526020019081526020016000208190555061129784826112dc565b91505092915050565b6000848484846040516020016112b9949392919061189c565b6040516020818303038152906040528051906020012060001c9050949350505050565b600082826040516020016112f19291906116f9565b60405160208183030381529060405280519060200120905092915050565b828054828255906000526020600020908101928215611388579160200282015b828111156113875782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061132f565b5b5090506113959190611399565b5090565b5b808211156113b257600081600090555060010161139a565b5090565b6000813590506113c581611dbf565b92915050565b6000815190506113da81611dd6565b92915050565b6000813590506113ef81611ded565b92915050565b60008135905061140481611e04565b92915050565b60008151905061141981611e04565b92915050565b60006020828403121561143557611434611c6a565b5b6000611443848285016113b6565b91505092915050565b60006020828403121561146257611461611c6a565b5b6000611470848285016113cb565b91505092915050565b600080604083850312156114905761148f611c6a565b5b600061149e858286016113e0565b92505060206114af858286016113f5565b9150509250929050565b6000602082840312156114cf576114ce611c6a565b5b60006114dd848285016113f5565b91505092915050565b6000602082840312156114fc576114fb611c6a565b5b600061150a8482850161140a565b91505092915050565b600061151f838361152b565b60208301905092915050565b61153481611a89565b82525050565b61154381611a89565b82525050565b6000611554826119ac565b61155e81856119cf565b93506115698361199c565b8060005b8381101561159a5781516115818882611513565b975061158c836119c2565b92505060018101905061156d565b5085935050505092915050565b6115b081611a9b565b82525050565b6115bf81611aa7565b82525050565b6115d66115d182611aa7565b611b69565b82525050565b60006115e7826119b7565b6115f181856119e0565b9350611601818560208601611aed565b61160a81611c6f565b840191505092915050565b61161e81611adb565b82525050565b60006116316026836119f1565b915061163c82611c80565b604082019050919050565b6000611654602b836119f1565b915061165f82611ccf565b604082019050919050565b60006116776020836119f1565b915061168282611d1e565b602082019050919050565b600061169a601f836119f1565b91506116a582611d47565b602082019050919050565b60006116bd602d836119f1565b91506116c882611d70565b604082019050919050565b6116dc81611ad1565b82525050565b6116f36116ee82611ad1565b611b73565b82525050565b600061170582856115c5565b60208201915061171582846116e2565b6020820191508190509392505050565b600061173182866116e2565b60208201915061174182856116e2565b60208201915061175182846116e2565b602082019150819050949350505050565b6000602082019050611777600083018461153a565b92915050565b6000606082019050611792600083018661153a565b61179f602083018561153a565b6117ac6040830184611615565b949350505050565b60006040820190506117c9600083018561153a565b6117d660208301846116d3565b9392505050565b60006060820190506117f2600083018661153a565b6117ff60208301856116d3565b818103604083015261181181846115dc565b9050949350505050565b600060208201905081810360008301526118358184611549565b905092915050565b600060208201905061185260008301846115a7565b92915050565b600060208201905061186d60008301846115b6565b92915050565b600060408201905061188860008301856115b6565b61189560208301846116d3565b9392505050565b60006080820190506118b160008301876115b6565b6118be60208301866116d3565b6118cb604083018561153a565b6118d860608301846116d3565b95945050505050565b600060208201905081810360008301526118fa81611624565b9050919050565b6000602082019050818103600083015261191a81611647565b9050919050565b6000602082019050818103600083015261193a8161166a565b9050919050565b6000602082019050818103600083015261195a8161168d565b9050919050565b6000602082019050818103600083015261197a816116b0565b9050919050565b600060208201905061199660008301846116d3565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a0d82611ad1565b9150611a1883611ad1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4d57611a4c611bae565b5b828201905092915050565b6000611a6382611ad1565b9150611a6e83611ad1565b925082611a7e57611a7d611bdd565b5b828204905092915050565b6000611a9482611ab1565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ae682611ad1565b9050919050565b60005b83811015611b0b578082015181840152602081019050611af0565b83811115611b1a576000848401525b50505050565b6000611b2b82611ad1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b5e57611b5d611bae565b5b600182019050919050565b6000819050919050565b6000819050919050565b6000611b8882611ad1565b9150611b9383611ad1565b925082611ba357611ba2611bdd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060008201527f7769746820666175636574000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b7f43616e27742062652067726561746572207468616e2074686520746f74616c2060008201527f7061727469636970616e74732100000000000000000000000000000000000000602082015250565b611dc881611a89565b8114611dd357600080fd5b50565b611ddf81611a9b565b8114611dea57600080fd5b50565b611df681611aa7565b8114611e0157600080fd5b50565b611e0d81611ad1565b8114611e1857600080fd5b5056fea264697066735822122092cc684bfc1a82abfa6a34f13a9af79e536e1a9b2090d15ca6d0045dc2f72d4064736f6c63430008050033";

type LotteryV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryV3__factory extends ContractFactory {
  constructor(...args: LotteryV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryV3> {
    return super.deploy(overrides || {}) as Promise<LotteryV3>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LotteryV3 {
    return super.attach(address) as LotteryV3;
  }
  connect(signer: Signer): LotteryV3__factory {
    return super.connect(signer) as LotteryV3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryV3Interface {
    return new utils.Interface(_abi) as LotteryV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryV3 {
    return new Contract(address, _abi, signerOrProvider) as LotteryV3;
  }
}
